{"version":3,"sources":["components/TodoForm.js","components/TodoItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","todoInput","setTodoInput","todos","setTodos","value","onChange","e","target","type","className","placeholder","onClick","preventDefault","text","completed","id","uuidv4","TodoItem","title","todo","editHandler","map","item","filter","TodoList","clearList","App","useState","useEffect","getFromStorage","saveToStorage","todoStorage","JSON","parse","localStorage","getItem","setItem","stringify","selectedItem","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c444e08.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst TodoForm = ({ todoInput, setTodoInput, todos, setTodos }) => {\r\n  const inputTextHandler = (e) => {\r\n    setTodoInput(e.target.value);\r\n  };\r\n\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([...todos, { text: todoInput, completed: false, id: uuidv4() }]);\r\n    setTodoInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        value={todoInput}\r\n        onChange={inputTextHandler}\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        placeholder=\"Enter your task..\"\r\n      />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"far fa-plus-square\"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React from \"react\";\r\n\r\nconst TodoItem = ({ title, todo, todos, setTodos, editHandler }) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((item) => item.id !== todo.id));\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={todo.completed ? \"todo todo-comp\" : \"todo\"}>\r\n      <li className={todo.completed ? \"todo-item completed\" : \"todo-item\"}>\r\n        {title}\r\n      </li>\r\n      <button onClick={completeHandler} className=\"check-button\">\r\n        {todo.completed ? (\r\n          <i className=\"fas fa-redo\"></i>\r\n        ) : (\r\n          <i className=\"fas fa-check\"></i>\r\n        )}\r\n      </button>\r\n      <button onClick={editHandler} className=\"edit-btn\">\r\n        <i className=\"fas fa-edit\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"remove-button\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = ({ todos, setTodos, editHandler, clearList }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {todos.map((todo) => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            title={todo.text}\r\n            todo={todo}\r\n            todos={todos}\r\n            setTodos={setTodos}\r\n            editHandler={() => editHandler(todo.id)}\r\n          />\r\n        ))}\r\n\r\n        <button type=\"button\" className=\"clear-button\" onClick={clearList}>\r\n          <div className=\"clear-tx\">Clear list</div>\r\n        </button>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [todoInput, setTodoInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    getFromStorage();\n  }, []);\n\n  useEffect(() => {\n    saveToStorage();\n  }, [todos]);\n\n  const getFromStorage = () => {\n    const todoStorage = JSON.parse(localStorage.getItem(\"todos\"));\n    if (todoStorage) setTodos(todoStorage);\n  };\n\n  const saveToStorage = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const editHandler = (id) => {\n    setTodos(todos.filter((item) => item.id !== id));\n    const selectedItem = todos.find((item) => item.id === id);\n    setTodoInput(selectedItem.text);\n  };\n\n  const clearList = () => {\n    setTodos([]);\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Task List</h1>\n      </header>\n      <TodoForm\n        todos={todos}\n        setTodos={setTodos}\n        todoInput={todoInput}\n        setTodoInput={setTodoInput}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        editHandler={editHandler}\n        clearList={clearList}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}